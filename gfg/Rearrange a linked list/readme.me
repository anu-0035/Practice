ifficulty: MediumAccuracy: 44.26%Submissions: 48K+Points: 4Average Time: 20m
Given a singly linked list, the task is to rearrange it in a way that all odd position nodes are together and all even position nodes are together. (Considering 1-based indexing.)

Note: You should place all odd-positioned nodes first and then the even-positioned ones. Also, the relative order of odd-positioned nodes and even-positioned nodes should be maintained. 

Examples:

Input: LinkedList: 1->2->3->4
Output: 1->3->2->4 
Explanation: Odd elements are 1, 3 and even elements are 2, 4. Hence, resultant linked list is 1->3->2->4
 
Input: LinkedList: 1->2->3->4->5
Output: 1->3->5->2->4 
Explanation: Odd elements are 1, 3, 5 and even elements are 2, 4. Hence, resultant linked list is 1->3->5->2->4.
 
Expected Time Complexity: O(n).
Expected Auxiliary Space: O(1).

Constraints:
1 ≤ number of nodes ≤ 10^4
0 ≤ node->data ≤ 10^3

Company Tags
